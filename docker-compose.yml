networks:
  farmlore_network:
    driver: bridge
services:
  db:
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 512M
    environment:
    - POSTGRES_PASSWORD=postgres
    - POSTGRES_USER=postgres
    - POSTGRES_DB=farmlore
    healthcheck:
      interval: 5s
      retries: 5
      test:
      - CMD-SHELL
      - pg_isready -U postgres
      timeout: 5s
    image: postgres:14
    networks:
    - farmlore_network
    restart: always
    volumes:
    - postgres_data:/var/lib/postgresql/data/
  nginx:
    depends_on:
      web:
        condition: service_healthy
      rag_connector:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
    image: nginx:latest
    networks:
    - farmlore_network
    ports:
    - 80:80
    restart: always
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    - ./nginx/html:/usr/share/nginx/html
    - static_volume:/usr/share/nginx/staticfiles
    - media_volume:/usr/share/nginx/media
  ollama:
    build:
      context: ./pest-management-chatbot/farmlore-project
      dockerfile: ollama/Dockerfile
    environment:
    - OLLAMA_HOST=0.0.0.0
    - OLLAMA_TIMEOUT=600
    healthcheck:
      interval: 60s
      retries: 5
      start_period: 120s
      test:
      - CMD
      - curl
      - -f
      - http://localhost:11434/api/tags
      timeout: 30s
    networks:
    - farmlore_network
    ports:
    - 11434:11434
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
    volumes:
    - ollama_data:/root/.ollama
    - ./pest-management-chatbot/farmlore-project/api/inference_engine/modelfiles:/app/modelfiles
  rag_connector:
    build:
      context: .
      dockerfile: Dockerfile.rag
    depends_on:
      web:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 768M
    environment:
      - API_URL=http://web:8000
      - PORT=5000
    networks:
      - farmlore_network
    ports:
      - 5000:5000
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - ./standalone_rag.py:/app/standalone_rag.py
      - ./improved_standalone_rag.py:/app/improved_standalone_rag.py
      - ./rag_web_connector.py:/app/rag_web_connector.py
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      bash -c "
      echo 'Starting web service...' &&
      python manage.py migrate --noinput &&
      python manage.py collectstatic --noinput &&
      if [ '$$USE_RAG' = 'true' ]; then python initialize_rag.py || true; fi &&
      gunicorn farmlore.wsgi:application --bind 0.0.0.0:8000 --workers 1 --threads 2 --timeout 300"
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    environment:
    - DEBUG=True
    - SECRET_KEY=your_secret_key_here
    - DB_NAME=farmlore
    - DB_USER=postgres
    - DB_PASSWORD=postgres
    - DB_HOST=db
    - DB_PORT=5432
    - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1] web nginx 192.168.137.1
    - OLLAMA_BASE_URL=http://ollama:11434
    - OLLAMA_MODEL=tinyllama
    - USE_OLLAMA=true
    - USE_PROLOG_PRIMARY=true
    - USE_RAG=true
    - RAG_PERSIST_DIR=/app/data/chromadb
    - RAG_CONNECTOR_URL=http://rag_connector:5000
    healthcheck:
      interval: 45s
      retries: 5
      start_period: 180s
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8000/
      timeout: 10s
    networks:
    - farmlore_network
    ports:
    - 8000:8000
    restart: always
    volumes:
    - ./pest-management-chatbot/farmlore-project/api:/app/api
    - ./pest-management-chatbot/farmlore-project/chatbot:/app/chatbot
    - ./pest-management-chatbot/farmlore-project/community:/app/community
    - ./pest-management-chatbot/farmlore-project/core:/app/core
    - ./pest-management-chatbot/farmlore-project/data:/app/data
    - ./pest-management-chatbot/farmlore-project/farmlore:/app/farmlore
    - ./pest-management-chatbot/farmlore-project/initialize_rag.py:/app/initialize_rag.py
    - static_volume:/app/staticfiles
    - media_volume:/app/media
    - chroma_data:/app/data/chromadb
volumes:
  chroma_data: null
  media_volume: null
  ollama_data: null
  postgres_data: null
  static_volume: null
