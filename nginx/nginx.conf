user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    debug_connection [::1];
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  300;
    
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;

    client_max_body_size 100M;

    upstream web_upstream {
        server web:8000;
    }

    upstream rag_connector_upstream {
        server rag_connector:5000;
    }

    server {
        listen 80;
        server_name localhost;
        
        location = /rag-api/proxy-api {
            add_header X-RAG-Proxy-Matched "true" always;
            proxy_pass http://rag_connector_upstream/proxy-api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        location /static/ {
            alias /usr/share/nginx/staticfiles/;
        }

        location /media/ {
            alias /usr/share/nginx/media/;
        }
        
        # Catch-all for any other requests to the Django app
        location / {
            proxy_pass http://web_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header X-Nginx-Proxied "true" always; # Custom header to confirm this block is hit
        }

        # Add a specific health check endpoint that just returns 200
        location = /nginx_health {
            access_log off;
            add_header Content-Type text/plain;
            add_header X-Nginx-Health "true" always;
            return 200 "Nginx is healthy";
        }
    }
} 