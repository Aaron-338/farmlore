{
  "timestamp": "2025-05-15T20:24:56.749489",
  "docker_status": false,
  "test_results": [
    {
      "file": "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\test_performance.py",
      "success": true,
      "returncode": 0,
      "duration": 3.71419095993042,
      "output": "",
      "error": ""
    },
    {
      "file": "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\test_hybrid_engine.py",
      "success": false,
      "returncode": 1,
      "duration": 0.8040478229522705,
      "output": "",
      "error": "2025-05-15 20:25:00,531 - INFO - Testing HybridEngine and OllamaHandler integration\n2025-05-15 20:25:01,008 - INFO - Model performance monitor initialized. Logging to C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\logs\\model_performance\nWARNING: Invalid SWI-Prolog home directory c:/program files/swipl: no ABI file\n2025-05-15 20:25:01,081 - INFO - Testing OllamaHandler directly\n2025-05-15 20:25:01,082 - INFO - Loaded 0 entries from disk cache (out of 0 total)\n2025-05-15 20:25:01,082 - INFO - Loaded 0 entries from semantic cache\n2025-05-15 20:25:01,083 - INFO - Starting non-blocking initialization of Ollama handler with endpoint: http://localhost:11434\n2025-05-15 20:25:01,123 - INFO - Ollama model tags: {'models': []}\n2025-05-15 20:25:01,123 - WARNING - No models available in Ollama\n2025-05-15 20:25:01,123 - WARNING - Ollama is not available. Using Prolog-based fallback.\n2025-05-15 20:25:01,124 - INFO - Ollama model tags: {'models': []}\n2025-05-15 20:25:01,124 - WARNING - No models available in Ollama\n2025-05-15 20:25:01,124 - INFO - Ollama API available: False\n2025-05-15 20:25:01,124 - INFO - Testing HybridEngine\n2025-05-15 20:25:01,124 - INFO - Initializing HybridEngine\nERROR: Syntax error: Illegal \\u or \\U sequence\nERROR: consult('C:\nERROR: ** here **\nERROR: \\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\prolog_integration\\knowledgebase.pl') . \n2025-05-15 20:25:01,125 - ERROR - Error: Caused by: 'consult('C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\prolog_integration\\knowledgebase.pl')'. Returned: 'error(syntax_error(Illegal \\u or \\U sequence), string(b\"consult('C:\\\\Users\\\\mmmab\\\\Downloads\\\\farmlore\\\\pest-management-chatbot\\\\farmlore-project\\\\prolog_integration\\\\knowledgebase.pl') . \", 11))'.\nTraceback (most recent call last):\n  File \"C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\test_hybrid_engine.py\", line 36, in main\n    engine = HybridEngine()\n  File \"C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\api\\inference_engine\\hybrid_engine.py\", line 53, in __init__\n    self.prolog_service = PrologService()\n                          ~~~~~~~~~~~~~^^\n  File \"C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\prolog_integration\\service.py\", line 8, in __init__\n    self.connector = PrologConnector()\n                     ~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\prolog_integration\\connector.py\", line 13, in __new__\n    cls._instance.prolog.consult(kb_path)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\n  File \"C:\\Users\\mmmab\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pyswip\\prolog.py\", line 393, in consult\n    next(cls.query(str(path).join([\"consult('\", \"')\"]), catcherrors=catcherrors))\n    ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\mmmab\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pyswip\\prolog.py\", line 171, in __call__\n    raise PrologError(\n    ...<10 lines>...\n    )\npyswip.prolog.PrologError: Caused by: 'consult('C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\prolog_integration\\knowledgebase.pl')'. Returned: 'error(syntax_error(Illegal \\u or \\U sequence), string(b\"consult('C:\\\\Users\\\\mmmab\\\\Downloads\\\\farmlore\\\\pest-management-chatbot\\\\farmlore-project\\\\prolog_integration\\\\knowledgebase.pl') . \", 11))'.\n"
    },
    {
      "file": "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\test_ollama.py",
      "success": true,
      "returncode": 0,
      "duration": 2.9634265899658203,
      "output": "\n===== TESTING FARMLORE OLLAMA INTEGRATION =====\n\n\n--- Testing Direct Connection to Ollama ---\n\n\n===== OLLAMA INTEGRATION TEST COMPLETE =====\n\n",
      "error": ""
    },
    {
      "file": "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\test_fallbacks.py",
      "success": true,
      "returncode": 0,
      "duration": 32.19080424308777,
      "output": "Testing in forced fallback mode (Ollama unavailable)\n----------------------------------------------------------------------\nQUESTION QUERY: \"What are common garden pests in tomatoes?\"\nRESPONSE: \"I'm currently unable to provide specific pest information. Common approaches include identifying the pest through visual inspection, researching organic control methods, and considering both cultural practices and natural predators for sustainable management.\"\n----------------------------------------------------------------------\nADVICE QUERY: \"Please suggest some methods to control aphids.\"\nRESPONSE: \"I apologize, but I'm experiencing technical difficulties. Please try again later, or contact support if the problem persists.\"\n----------------------------------------------------------------------\nSTATEMENT QUERY: \"My plants have small holes in the leaves.\"\nRESPONSE: \"I'm currently unable to provide specific crop information. Key factors for successful cultivation include choosing varieties adapted to your local climate, ensuring proper spacing, regular watering, and monitoring for pests and diseases.\"\n----------------------------------------------------------------------\n",
      "error": ""
    },
    {
      "file": "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\api\\inference_engine\\test_kb.py",
      "success": true,
      "returncode": 0,
      "duration": 0.17928385734558105,
      "output": "Testing knowledge base loading...\n\nTrying to load knowledge base from: c:/Users/mmmab/OneDrive/Desktop/pest-management-chatbot/pest-management-chatbot/api/knowledge_base/pest_kb.pl\nError during test: Caused by: 'consult('c:\\Users\\mmmab\\OneDrive\\Desktop\\pest-management-chatbot\\pest-management-chatbot\\api\\knowledge_base\\pest_kb.pl')'. Returned: 'error(syntax_error(Illegal \\u or \\U sequence), string(b\"consult('c:\\\\Users\\\\mmmab\\\\OneDrive\\\\Desktop\\\\pest-management-chatbot\\\\pest-management-chatbot\\\\api\\\\knowledge_base\\\\pest_kb.pl') . \", 11))'.\n",
      "error": ""
    },
    {
      "file": "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\api\\inference_engine\\test_prolog.py",
      "success": false,
      "returncode": 1,
      "duration": 0.10315465927124023,
      "output": "",
      "error": "Traceback (most recent call last):\n  File \"C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\api\\inference_engine\\test_prolog.py\", line 4, in <module>\n    from prolog_engine import PrologEngine\n  File \"C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\api\\inference_engine\\prolog_engine.py\", line 7, in <module>\n    from .ollama_handler import OllamaHandler\nImportError: attempted relative import with no known parent package\n"
    },
    {
      "file": "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\api\\inference_engine\\test_ollama.py",
      "success": false,
      "returncode": 1,
      "duration": 0.07260942459106445,
      "output": "",
      "error": "Traceback (most recent call last):\n  File \"C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\api\\inference_engine\\test_ollama.py\", line 1, in <module>\n    from api.inference_engine.ollama_handler import OllamaHandler\nModuleNotFoundError: No module named 'api'\n"
    },
    {
      "file": "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\api\\inference_engine\\test_integrated_system.py",
      "success": false,
      "returncode": 1,
      "duration": 0.16892457008361816,
      "output": "",
      "error": "Traceback (most recent call last):\n  File \"C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\api\\inference_engine\\test_integrated_system.py\", line 1, in <module>\n    from hybrid_engine import HybridEngine\n  File \"C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\api\\inference_engine\\hybrid_engine.py\", line 14, in <module>\n    from prolog_integration.service import PrologService\nModuleNotFoundError: No module named 'prolog_integration'\n"
    }
  ],
  "coverage_results": {
    "Hybrid Engine": {
      "files_analyzed": 1,
      "total_lines": 836,
      "code_lines": 636,
      "comment_lines": 82,
      "blank_lines": 118,
      "functions": 15,
      "classes": 1,
      "estimated_coverage": 40,
      "matching_test_files": [
        "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\test_hybrid_engine.py",
        "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\api\\inference_engine\\test_integrated_system.py"
      ]
    },
    "Prolog Engine": {
      "files_analyzed": 2,
      "total_lines": 375,
      "code_lines": 302,
      "comment_lines": 25,
      "blank_lines": 48,
      "functions": 19,
      "classes": 3,
      "estimated_coverage": 60,
      "matching_test_files": [
        "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\test_performance.py",
        "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\test_ollama.py",
        "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\api\\inference_engine\\test_prolog.py"
      ]
    },
    "Ollama Handler": {
      "files_analyzed": 1,
      "total_lines": 1303,
      "code_lines": 897,
      "comment_lines": 168,
      "blank_lines": 238,
      "functions": 38,
      "classes": 2,
      "estimated_coverage": 80,
      "matching_test_files": [
        "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\test_hybrid_engine.py",
        "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\test_ollama.py",
        "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\test_fallbacks.py",
        "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\api\\inference_engine\\test_ollama.py"
      ]
    },
    "Data Structures": {
      "files_analyzed": 1,
      "total_lines": 375,
      "code_lines": 292,
      "comment_lines": 13,
      "blank_lines": 70,
      "functions": 34,
      "classes": 9,
      "estimated_coverage": 20,
      "matching_test_files": [
        "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\test_performance.py"
      ]
    },
    "API Layer": {
      "files_analyzed": 3,
      "total_lines": 578,
      "code_lines": 299,
      "comment_lines": 26,
      "blank_lines": 253,
      "functions": 25,
      "classes": 11,
      "estimated_coverage": 20,
      "matching_test_files": [
        "C:\\Users\\mmmab\\Downloads\\farmlore\\pest-management-chatbot\\farmlore-project\\test_ollama.py"
      ]
    }
  },
  "performance_results": {
    "data_structure_performance": {
      "entity_trie": 0.0032155513763427734,
      "lru_cache": 0.009900808334350586,
      "bloom_filter": 0.01544046401977539
    },
    "cpu_utilization": 28.0,
    "memory_utilization": {
      "total": 7821766656,
      "available": 817528832,
      "used": 7004237824,
      "percent": 89.5
    }
  },
  "resilience_results": {
    "fallback_mechanisms": {
      "fallback_handler_implemented": true,
      "alternative_response_mechanism": true,
      "analysis": "The system has code to handle service unavailability through fallback mechanisms"
    }
  }
}